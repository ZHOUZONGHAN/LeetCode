package 链表;

import util.ListNode;

/**
 * @author zhouzh6
 * @date 2020-10-26
 */

/**
 * 如果我们要在链表中删除一个节点，一般的操作是：
 *
 * 1.修改要删除节点的上一个节点的指针
 * 2.将该指针指向要删除节点的下一个节点
 * 例如，在链表[4, 5, 1, 9]中，当我们要删除节点5时，我们会修改节点5上一个节点4的指针，让它指向节点5的下一个节点，即节点1：
 *
 * 但这道题只告诉我们要删除的节点，我们并不知道该节点的上一个节点是什么，
 * 既然我们要删除一个节点时需要知道它的上一个节点，如果我们无法得知上一个节点，我们就找一个可以知道上一个节点的节点，
 * 把它变成要删除的节点，然后删除它。
 *
 * 还是[4, 5, 1, 9]链表，还是删除节点5。
 *
 * 首先，我们把节点5下一个节点的值赋给它，把它变成一个「不需要删除」的节点：
 *
 * 这样一来，第二个节点1和第三个节点1，无论我们删除其中的哪一个，都可以得到最终结果[4, 1, 9]。
 * 既然第二个节点不好删除，那就删除第三个
 *
 * 改变第二个节点 1 的指针，将它指向第 4 个节点 9，这样一来，第三个节点 1 就被删除了：
 */
public class 删除链表中的节点 {

    public void deleteNode(ListNode node) {
        node.val = node.next.val;
        node.next = node.next.next;
    }
}
